Building Gutenprint for Mac OS X
by John Labovitz <johnl@johnlabovitz.com>

This guide describes how to build and package Gutenprint for Mac OS X
versions 10.6 (Snow Leopard) and above. Because Gutenprint supports many now-
obsolete OS X versions, its build process is fairly complicated. The
essential steps are:

	- set up development environment
	- obtain CVS tree
	- obtain release distribution
	- build from source
	- build installer package and final DMG for distribution

The steps below are listed in order that they need to be completed.


================================================================
Configure machines

A Mac running 10.6 or later is required to build Gutenprint. An optional physical
or virtual Linux machine is needed for doing a full build from the CVS tree.


Operating system
----------------

All machines should be up to date within their major release. Run Software
Update to be sure.


Xcode
-----

The development environment needed for the OS X machines is available from
Apple Downloads, but requires a (free) developer membership to access:

	https://developer.apple.com/downloads/index.action

The OS X machines must have the Xcode tools (5.0.2 or above) installed, both
the IDE and command-line tools.

The Mac must also have the 'Auxiliary Tools for Xcode' package (labeled 'Late
July 2012' -- newer verions will not work!). This can be downloaded from
Apple Downloads, as above. Once downloaded, drag the 'PackageMaker.app' from
the disk image to your main Applications folder.


Homebrew
--------

Homebrew is not specifically required, but is helpful for obtaining the
required 'pkg-config' tool. If you don't already have it, installation
instructions can be found at the Homebrew site:

	http://brew.sh

Follow the instructions on that page to install Homebrew. Then run 'brew
doctor' to check the installation, and then install 'git'.

	brew doctor
	brew install git


pkg-config
----------

If you installed Homebrew, the installation of 'git' installed 'pkg-config'
for you, so you don't need to install any further packages. If you didn't use
Homebrew, you must install 'pkg-config' (which depends on 'glib').




================================================================
Create working directory

The working directory will contain the initial files needed for the
build, the temporary artifacts, and the final installation packages.
It can be created anywhere. For example:

	mkdir ~/projects/gutenprint
	cd ~/projects/gutenprint

The steps below assume that the current directory is the working
directory.


================================================================
Get Gutenprint CVS tree

The main CVS tree contains the source for this document, as well as
scripts and resources needed to build the final installation packages.
You will also need the CVS tree if you need to build the release
tarball from source.

See section 3.1 ('Using CVS') in the file doc/README.maintaining for
details on checking out the CVS tree. By default, the CVS tree will be
checked out into the 'print' directory.


================================================================
Obtain a Gutenprint release

A Gutenprint release is published as a compressed _tar_ archive (aka
'tarball') of the source files for a particular version. Unlike the CVS tree,
a release does not depend on the more exotic build tools, and so is more
easily configured and built on OS X. While the release itself can install
Gutenprint under OS X (with the usual './configure && make install'), we
instead convert the release to an installer package for ease of use by regular
OS X users.


* Option 1: Download release

Releases can be downloaded from Sourceforge:

	http://sourceforge.net/projects/gimp-print/files/

Look for a subdirectory named for the major version (e.g., 'gutenprint-5.2').
Tarballs are named for the full version: 'gutenprint-5.2.10.tar.bz2'.

If the project is nearing a release, tarballs may be in the snapshot
directory instead, at:

	http://sourceforge.net/projects/gimp-print/files/snapshots/

Once the release has been downloaded, the tarball should be placed in the
working  directory.


* Option 2: Build release

A release can be built out of the CVS tree. However, due to the autotools not
being fully implemented on OS X, this must be done on a physical or
virtualized Linux development machine is required. To install a Linux VM,
refer to the file 'macosx/README.vm-environment.markdown' in the CVS tree. To
build the tarball, see 'doc/README.maintaining'.


================================================================
Obtain libusb release

To support the dyesub backend, the 'libusb' package must be downloaded and
extracted in a place where the build tools can access it. Download version
1.0.18 or later from the following site and place the tarball into the
working directory.

	https://sourceforge.net/projects/libusb/files/


================================================================
Change directory to 'macosx'

For the OS X build scripts to run properly, you will need to be in
the 'macosx' directory in the CVS tree.


================================================================
Set up environment

Although the build process does build a new Gutenprint installer, it
does not yet build the uninstaller packages. Therefore, the scripts
need access to the old packages to use them as a source. To do this,
first download the previous version's DMG file, and copy its contents
to a directory. A convenient place is the parent directory of the CVS
tree. Then set the GP_OLD_INSTALLER environment variable to the name of
this directory:

	export GP_OLD_INSTALLER='../../Gutenprint 5.2.9 (dmg)'

Another environment variable that must be set up that describes the
location of the distribution release:

	export GP_GUTENPRINT_SRC=../../gutenprint-VERSION.tar.bz

where VERSION is replaced by the version you are building.

The location of the libusb release must also be set:

	export GP_LIBUSB_SRC=../../libusb-VERSION.tar.bz

The file 'setup-env.sample' contains sample settings for all required
environment variables; it can be copied to 'setup-env', modified as
needed, and sourced into the current shell:

	source setup-env


================================================================
Update release information

Although most information such as documentation is pulled from the
release, there are a few files that will need to be updated for a new
OS X release. Relative to the CVS tree, they are:

	macosx/src/gutenprint.pkg.src/Info.plist
		- update version in CFBundleGetInfoString, CFBundleIdentifier,
		  and CFBundleShortVersionString keys

	macosx/src/gutenprint.pkg.src/Resources/Welcome.rtfd
		- update version (in header)
		- update systems supported (in text)

	macosx/src/gutenprint.pkg.src/Resources/ReadMe.html
		- update version and release date (in header)
		- update systems supported
		- update 'changes' section with most recent changes
		- add any needed information specific to release

	macosx/src/gutenprint.dmg.src/Contents/Documentation/SourceCode.webloc
		- update URL to source code (plist file; edit in text editor or Xcode)

	macosx/subversion
		- set to either empty, or a sub-version that will be appended
		  to the release version (e.g., a release version of
		  'gutenprint-5.2.10-pre1' and a sub-version of 'a' will result in a
		  final version of 'gutenprint-5.2.10-pre1a')


================================================================
Build from release

Given a release distribution tarball, the 'make-build' script builds
accordingly:

	./make-build

The results of the builds will be in the 'build' directory, under an 'install'
subdirectory containing the final files ready for packaging. The 'gutenprint.build.log'
and 'libusb.build.log' files will contain output of the build process. (This log
file should be checked for errors, even if the build script doesn't show
anything.)


================================================================
Package installers & uninstallers

Packages are created for the current Gutenprint driver. The uninstaller
package files are copied from the previous release, as described above.

Build all the installer packages and the final DMG file:

	./make-installer

Note that you will probably need to authenticate once at the beginning of the
process (to sudo, via the terminal) and again at the end (to hdiutil, via a
GUI dialog).

This will create a final DMG file called 'gutenprint-VERSION.dmg', which can
be uploaded to SourceForge as an official OS X release.
